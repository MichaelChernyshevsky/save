// Mocks generated by Mockito 5.4.2 from annotations
// in imaigination_mobile/test/main_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:imaigination_mobile/constants/exports/hidden_export.dart'
    as _i3;
import 'package:imaigination_mobile/constants/models/response.dart' as _i5;
import 'package:imaigination_mobile/data/data/repo.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepoInt_0 extends _i1.SmartFake implements _i2.RepoInt {
  _FakeRepoInt_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRepoString_1 extends _i1.SmartFake implements _i2.RepoString {
  _FakeRepoString_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRepoBool_2 extends _i1.SmartFake implements _i2.RepoBool {
  _FakeRepoBool_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRepoList_3 extends _i1.SmartFake implements _i2.RepoList {
  _FakeRepoList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRepoDispose_4 extends _i1.SmartFake implements _i2.RepoDispose {
  _FakeRepoDispose_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepo extends _i1.Mock implements _i3.UserRepo {
  @override
  _i2.RepoInt get repoInt => (super.noSuchMethod(
        Invocation.getter(#repoInt),
        returnValue: _FakeRepoInt_0(
          this,
          Invocation.getter(#repoInt),
        ),
        returnValueForMissingStub: _FakeRepoInt_0(
          this,
          Invocation.getter(#repoInt),
        ),
      ) as _i2.RepoInt);
  @override
  _i2.RepoString get repoString => (super.noSuchMethod(
        Invocation.getter(#repoString),
        returnValue: _FakeRepoString_1(
          this,
          Invocation.getter(#repoString),
        ),
        returnValueForMissingStub: _FakeRepoString_1(
          this,
          Invocation.getter(#repoString),
        ),
      ) as _i2.RepoString);
  @override
  _i2.RepoBool get repoBool => (super.noSuchMethod(
        Invocation.getter(#repoBool),
        returnValue: _FakeRepoBool_2(
          this,
          Invocation.getter(#repoBool),
        ),
        returnValueForMissingStub: _FakeRepoBool_2(
          this,
          Invocation.getter(#repoBool),
        ),
      ) as _i2.RepoBool);
  @override
  _i2.RepoList get repoList => (super.noSuchMethod(
        Invocation.getter(#repoList),
        returnValue: _FakeRepoList_3(
          this,
          Invocation.getter(#repoList),
        ),
        returnValueForMissingStub: _FakeRepoList_3(
          this,
          Invocation.getter(#repoList),
        ),
      ) as _i2.RepoList);
  @override
  _i2.RepoDispose get repoDispose => (super.noSuchMethod(
        Invocation.getter(#repoDispose),
        returnValue: _FakeRepoDispose_4(
          this,
          Invocation.getter(#repoDispose),
        ),
        returnValueForMissingStub: _FakeRepoDispose_4(
          this,
          Invocation.getter(#repoDispose),
        ),
      ) as _i2.RepoDispose);
  @override
  _i4.Future<dynamic> saveUserData({
    required String? email,
    required String? token,
    required String? name,
    required int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserData,
          [],
          {
            #email: email,
            #token: token,
            #name: name,
            #id: id,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
        returnValueForMissingStub: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<void> saveAuthInfo(_i5.AuthResponse? authInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAuthInfo,
          [authInfo],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> saveHistory(List<String>? request) => (super.noSuchMethod(
        Invocation.method(
          #saveHistory,
          [request],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> saveUserName(String? updateUser) => (super.noSuchMethod(
        Invocation.method(
          #saveUserName,
          [updateUser],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> saveUploadToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveUploadToken,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> setSubscription(String? subscription) => (super.noSuchMethod(
        Invocation.method(
          #setSubscription,
          [subscription],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<bool> getFeedback() => (super.noSuchMethod(
        Invocation.method(
          #getFeedback,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> checkLogin() => (super.noSuchMethod(
        Invocation.method(
          #checkLogin,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> saveFeedback() => (super.noSuchMethod(
        Invocation.method(
          #saveFeedback,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<String> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<List<String>> getHistory() => (super.noSuchMethod(
        Invocation.method(
          #getHistory,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
  @override
  _i4.Future<String> getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<int> getId() => (super.noSuchMethod(
        Invocation.method(
          #getId,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<bool> checkSubscription() => (super.noSuchMethod(
        Invocation.method(
          #checkSubscription,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<dynamic> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
        returnValueForMissingStub: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}
